<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rohan Honwade</title>
    <link>https://rhcode.github.io/posts/</link>
    <description>Recent content in Posts on Rohan Honwade</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 24 Jun 2020 16:14:33 -0700</lastBuildDate>
    
	<atom:link href="https://rhcode.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache Arrow Spark&#43;AI Summit 2020</title>
      <link>https://rhcode.github.io/posts/apache-arrow-sparkai-summit-2020/</link>
      <pubDate>Wed, 24 Jun 2020 16:14:33 -0700</pubDate>
      
      <guid>https://rhcode.github.io/posts/apache-arrow-sparkai-summit-2020/</guid>
      <description>I attended the Spark+AI summit organized by Databricks this week. Made some notes about Dremio and the Apache Arrow project and invite you to take a read</description>
    </item>
    
    <item>
      <title>Making Spark Jobs Faster and Error Free</title>
      <link>https://rhcode.github.io/posts/making-spark-jobs-faster-error-free/</link>
      <pubDate>Fri, 03 Apr 2020 10:23:39 -0700</pubDate>
      
      <guid>https://rhcode.github.io/posts/making-spark-jobs-faster-error-free/</guid>
      <description>Tips for writing good Spark jobs</description>
    </item>
    
    <item>
      <title>Argon2 Password Hashing</title>
      <link>https://rhcode.github.io/posts/argon-password-hashing/</link>
      <pubDate>Sat, 23 Nov 2019 21:26:08 -0800</pubDate>
      
      <guid>https://rhcode.github.io/posts/argon-password-hashing/</guid>
      <description>I recently had the opportunity to change the password hashing algorithm we used in one of our services. In this post, we briefly compare the older SHA-256 algorithm with a more modern implementation that is Argon2id. I will shed some light on some statistics you can use to make the right choice of parameters for the Argon2 algorithm with respect to memory cost and compute cost. I have also shared the code snippet I used to carry out my research spike.</description>
    </item>
    
  </channel>
</rss>